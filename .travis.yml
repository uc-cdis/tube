sudo: required

language: python

python:
  - "3.7"
  - "3.8"

matrix:
 allow_failures:
   - python: "3.8"

cache: pip

addons:
  postgresql: "9.6"

services:
  - postgresql
  - docker

install:
  - pip uninstall -y six || true
  - pip install -r dev-requirements.txt
  - pip install -r requirements.txt
  - psql -c 'SELECT version();' -U postgres
  - psql -U postgres -c "create database metadata_db;"
  - psql -U postgres -f tests/metadata_db.sql metadata_db
  - sudo sed -i "s|#listen_addresses = 'localhost'|listen_addresses = '*'|g" /etc/postgresql/9.6/main/postgresql.conf
  - sudo sed -i "s|# DO NOT DISABLE!|host all all 0.0.0.0/0 trust\n\n# DO NOT DISABLE!|g" /etc/postgresql/9.6/main/pg_hba.conf
  - sudo service postgresql restart 9.6
  - sudo apt update
  - sudo apt install -y jq

before_script:
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
  - export REPOSITORY=cdis/tube
  - export BUILD_STATUS=$(./wait_for_quay.sh -r ${REPOSITORY} -b ${BRANCH//\//_} -d 30 -a 5)
  - export QUAY_BUILD_STATUS=$(echo $BUILD_STATUS | tr " " "\n" | tail -1)
  - echo $QUAY_BUILD_STATUS
  - git clone https://github.com/uc-cdis/compose-etl.git --branch master --single-branch
  - cp -f tests/gen3/tube/etlMapping.yaml compose-etl/configs/etlMapping.yaml
  - cp -f tests/gen3/tube/user.yaml compose-etl/configs/user.yaml
  - cd compose-etl
  - export HOST_IP_ADDRESS="$(ip -f inet -o addr show docker0 | cut -d\  -f 7 | cut -d/ -f 1)"
  - |
    echo '
    {
      "db_host": "'$HOST_IP_ADDRESS'",
      "db_username": "postgres",
      "db_password": "postgres",
      "db_database": "metadata_db"
    }
    ' > configs/creds.json
  - if [[ "$QUAY_BUILD_STATUS" != "complete" ]] || [[ "$QUAY_BUILD_STATUS" == "null" ]];
    then { echo "Could not find the quay build, using default."; }
    else { echo "Found quay build, updating docker-compose image"; sed -i "s/tube:master/tube:${BRANCH//\//_}/g" docker-compose.yml; };
    fi
  - sudo sysctl -w vm.max_map_count=262144
  - docker-compose up -d spark elasticsearch
  - sleep 60
  - docker-compose logs
  - docker-compose run tube bash -c "python run_config.py; python run_etl.py"
  - cd -
  - export XDG_DATA_HOME="$HOME/.local/share"
  - export ES_URL="localhost"
  - export ES_INDEX_NAME="etl"
  - export DICTIONARY_URL="https://s3.amazonaws.com/dictionary-artifacts/ndhdictionary/3.3.8/schema.json"
  - mkdir -p $XDG_DATA_HOME/gen3/tube
  - cp tests/gen3/tube/{creds.json,etlMapping.yaml,user.yaml} $XDG_DATA_HOME/gen3/tube/

script:
  - python -m pytest -v tests
